spring:
  application:
    name: crypto-analyzer
  profiles:
    active: "${ACTIVE_PROFILE:dev}"
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: ${KAFKA_GROUP_ID}
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages:
                com.w4t3rcs.cryptoanalyzer.*
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
app:
  telegram:
    bot:
      username: ${TELEGRAM_BOT_USERNAME}
      token: ${TELEGRAM_BOT_TOKEN}